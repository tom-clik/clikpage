/*

# Table styling

--table-cell-padding:0;
--table-text-align:inherit;

# Backgrounds 

--table-background: transparent
--table-stripe-bg: var(--table-background)

## Borders

--table-border-width:0px;
--table-border-style:solid;
--table-border-color:initial;

## Sticky header

--table-sticky: sticky || table-row 
--table-sticky-top:0;

## font/text color 

Apply to td/th as you like

Notes: 

We can't use border collapse to do any sort of sensible table styling

We need to do it the usual way of adjusting border widths for rows and columns

NB Note that if you want to adjust the border widths for td/th you do it by just adjusting the
vars for that scope e.g.

```css
table.info td, table.info th {
	--table-border-color:#c3c3c3;
}
```

## Adjusting columns

table.info tr td:nth-of-type(3) {
	--table-font-weight:bold;
	--table-text-align:left;	
}

## To do

Better mechanism for first and last column paddings? (not a priority).

*/

:root {
	--table-border-width:0px;
	--table-border-style:solid;
	--table-border-color:initial;
	--table-cell-padding:0;
	--table-text-align:inherit;
	--table-vertical-align: top;
	--table-background: transparent;
	--table-stripe-bg: var(--table-background);
	--table-sticky: block;/* sticky || block */
	--table-sticky-top:0;
}

th {
	font-weight:bold;
	--table-text-align:center;
}

table {
	border-width: var(--table-border-width);
	border-style: var(--table-border-style);
	border-color: var(--table-border-color);
	border-collapse: separate;
	width: auto;/* will override leagcy table width= settings */
}

th, td  {
	border-width: var(--table-border-width);
	border-style: var(--table-border-style);
	border-color: var(--table-border-color);
	text-align: var(--table-text-align);
	padding: var(--table-cell-padding);
	vertical-align:var(--table-vertical-align);
}

tbody tr {
	background: var(--table-background);
}

tbody tr:nth-of-type(2n) {
	--table-background: var(--table-stripe-bg);
}

thead {
	z-index: 990;
}

tbody {
	z-index: 100;
}

thead tr th {
	border-top-width: 0;
}

tfoot  th {
	border-bottom-width: 0;
}
/* tables have to have body for effective styling */
tbody  tr {
	border-top-width: 0;
}

td, th {
	border-left-width: 0px;
}

td {
	border-top-width: 0px;
}

tr td:last-of-type, tr th:last-of-type {
	border-right-width:0;
}

tbody  tr:last-of-type td {
	border-bottom-width: 0;
}

table.info {
	--table-border-width: 1px;
	--table-cell-padding: 2px;
	--table-margin:0 0 1em 0;
	--table-sticky:sticky;
}

table.info td, table.info th {
	--table-border-width: 1px;
}

table {
  position:relative;
}

thead {
  position: var(--table-sticky);
  top: var(--table-sticky-top);
}



