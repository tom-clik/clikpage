/* MENUS


Create a grid or flexbox menu from a ul

## Grid menus

The following "var classes" need to be applied IN ORDER (orientation sets align defaults)

orientation,mode,borders,align,stretch,submenualign

orientation
: horizontal* | vertical 

mode
: grid|flex flex is default for horizontal

borders
: normal|boxes|dividers border mode. Using boxes or dividers, adjusts borders to allow for justa single width value to be supplied.

submenualign
: (menu-)top|bottom-left|right (default top-right) alignment of absolute position submenu. Relative to item unless prefixed with menu


stretch
: 0|1*   Stretch flex menu

align
: center left|center|right  Align text. Also for flex menus that don't stretch, align the whole menu. 


### Other settings

--menu-submenu-position
: absolute* | relative  Sub menu rollover style or inline

submenu-display
: none*|block show sub menus: obvs need to be inline



## Notes

The a tags are actually set to display flex themselves in order to accomodate icons. To align the lext you have to set
the justify-content property.

# Highlights etc

Use the following selector 

hover   li a:hover
hi      li.hi a
*/


:root {
	--link-color: #000;
	--menu-mode: flex;/* grid|flex */
	--menu-borders: normal; /* normal|boxes|dividers */
	--menu-orientation: horizontal;/* horizontal | vertical */
	--menu-submenualign: bottom-left; /* (top|bottom)-(left|right) */
	--menu-submenu-position: absolute; /* absolute | relative */
	--menu-submenu-show: hide; /* show|hide|hover using hover works quite well without need for JS, no animations though */ 
	--menu-stretch: 1; /* 1|0 */
	--menu-align:center;
	--menu-border-color:var(--link-color);
	--menu-background: transparent;
	--menu-gap: 4px;/* Gap between items */
	--menu-item-padding: 0 8px;
	--menu-item-border:0;/* item border width */
	--menu-item-width: 140px; /* min width of menu items in grid layou */
	--menu-icon-display: none;/* none or block */
	--menu-label-display: block;/* text part of menu item:; none or block */
	--menu-icon-width:32px;/* normal menu icons */
	--menu-icon-height:32px;	
	--menu-icon-valign: middle;/* WIP */
	--menu-icon-gap: 8px;/* gap between label and icon */
	--menu-icon-stretch: 1;/* stretch labels to fill remaining space */
	--menu-icon-align: row; /* flex direction for icon alignment */
	--menu-openicon-width:16px;/* "openicon" is the automatic icon applied for sub menus. Needs work */
	--menu-openicon-height:16px;	
	--menu-openicon-adjust: -4px;
	--menu-text-align: center;/* alignment of text in menu items */
	--menu-anim-time: 0.3s;
	--menu-direction: row;
	--menu-item-justify: center; /* item aligment start|center|end. Also see menu-text-align which usually needs setting as well */
	--menu-item-align: center; /* cross axis aligment, e.g. vertical when menu is horizontal */
	--menu-wrap: wrap;
	--menu-rollout: 0;
	--sub-menu-adjust:0;/* add to positioning of sub menus */
}

.cs-menu {
	--menu-item-border-width: var(--menu-item-border); /* reserved for system. Used with e.g. boxes and dividers schemes */
	/* Individual v and h settings for sub menu adjust ments */
	--sub-menu-adjust-v: var(--sub-menu-adjust);
	--sub-menu-adjust-h: var(--sub-menu-adjust);
}

.cs-menu > ul {
	list-style: none;
	margin:0;
	padding-left: 0em;
    text-indent: 0px;
	display: grid;
	grid-template-columns: repeat(auto-fit, minmax(var(--menu-item-width),1fr));
	grid-gap:var(--menu-gap);
	justify-content: var(--menu-item-justify); /* needs formalising. This is the align mechanism as the a tags themselves are now flexboxes */
	align-items: var(--menu-item-align);
	margin: 0 auto;
}

.cs-menu.menu-align-left > ul {
	margin-left:0;
	--menu-item-justify: start;
	--menu-text-align: left;
}

.cs-menu.menu-align-right > ul {
	margin-right:0;
	--menu-item-justify: end;
	--menu-text-align: right;
}

.cs-menu.menu-mode-flex > ul {
	display: flex;
	flex-direction: var(--menu-direction);
	flex-wrap: var(--menu-wrap);
}

.cs-menu.menu-orientation-vertical:not(.submenu) {
	--menu-submenualign:top-right;
	--menu-submenu-position:relative;
}

.cs-menu.menu-orientation-vertical {
	--menu-mode: grid;
	--menu-align: left;
}

.cs-menu.menu-orientation-vertical > ul {
	display: grid;
	grid-template-columns: 1fr;
}

.cs-menu.menu-orientation-vertical.menu-align-right > ul {
	--menu-text-align: right;
	--menu-item-justify: end;
}
.cs-menu.menu-orientation-vertical.menu-align-center > ul {
	--menu-text-align: center;
	--menu-item-justify: center;
}

.cs-menu.menu-borders-dividers {
	--menu-gap:0px;
	--menu-item-border-width: 0 var(--menu-item-border) 0 0;
}

.cs-menu.menu-borders-dividers li:last-of-type {
	--menu-item-border-width: 0;
}

.cs-menu.menu-borders-boxes {
	--menu-gap:0px;
	--menu-item-border-width: var(--menu-item-border) 0 var(--menu-item-border) var(--menu-item-border);
}

.cs-menu.menu-borders-boxes li:last-of-type {
	--menu-item-border-width: var(--menu-item-border);
}

.cs-menu.menu-orientation-vertical.menu-borders-dividers {
	--menu-item-border-width: 0 0 var(--menu-item-border) 0;
}

.cs-menu.menu-orientation-vertical.menu-borders-boxes {
	--menu-item-border-width: var(--menu-item-border) var(--menu-item-border) 0 var(--menu-item-border);
}

.cs-menu > ul > li {
	position:relative;
	flex-grow: var(--menu-stretch);
}

.cs-menu.menu-stretch-1 > ul {
	width:100%;
}

.cs-menu a, .cs-menu a:hover {
	white-space: nowrap;
	color:var(--link-color);
	display:flex;
	flex-grow: 1;
	flex-direction: var(--menu-icon-align);
	align-items: center;
	justify-content: var(--menu-item-justify); /* This is the icon, label etc  */
	grid-gap: var(--menu-icon-gap);
	text-decoration: none;
	padding:var(--menu-item-padding);	
	border-width:var(--menu-item-border-width);
	border-style:solid;
	border-color:var(--menu-border-color);
	background-color: var(--menu-background);
	/* watch browser agent default. Can't apply to ul */
	text-align: var(--menu-text-align);	
	transition: background-color var(--menu-anim-time) ease-in-out , border-color var(--menu-anim-time)  ease-in-out ;
}

/* Per class behaviour applied via JS. leave for now. */
.cs-menu.open {
	height:auto;
}

.submenu {
	display:none;
	position: var(--menu-submenu-position);
	top:0;
	left:0;
	z-index: 100;
  	min-width:100%;
  	overflow: hidden;
  	height: auto;
}

.cs-menu.menu-submenu-show-show .submenu {
	display:block;
}

.cs-menu.menu-orientation-horizontal .submenu {
	--menu-orientation:vertical;
}

.cs-menu[class*=submenualign-menu] {
	position:relative;
}

.cs-menu[class*=submenualign-menu] li {
	position:static;
}

.cs-menu.menu-submenu-position-absolute.menu-submenualign-menu-top-left .submenu, .cs-menu.menu-submenu-position-absolute.menu-submenualign-top-left .submenu {
	right: var(--sub-menu-adjust-h);
	top:0;
}
.cs-menu.menu-submenu-position-absolute.menu-submenualign-menu-bottom-left .submenu, .cs-menu.menu-submenu-position-absolute.menu-submenualign-bottom-left .submenu {
	right: 0;
	top: calc( 100% + var(--sub-menu-adjust-v));
}
.cs-menu.menu-submenu-position-absolute.menu-submenualign-menu-top-right .submenu, .cs-menu.menu-submenu-position-absolute.menu-submenualign-top-right .submenu {
	left:  calc( 100% + var(--sub-menu-adjust-v));
	top:0;
}
.cs-menu.menu-submenu-position-absolute.menu-submenualign-menu-bottom-right .submenu, .cs-menu.menu-submenu-position-absolute.menu-submenualign-bottom-right .submenu {
	left:  calc( 100% + var(--sub-menu-adjust-h));
	top: 100%;
}

li.open > .submenu, .submenu.show , .cs-menu.menu-submenu-show-hover > ul > li:hover > .submenu  {
	display:block;
}

.cs-menu ul.submenu li.open > ul.submenu {
	margin-top:0px;
}

/* sub menu indicator */
.cs-menu a > i[class*=icon].openicon {
	--menu-icon-height: 16px;
	--menu-icon-width: 16px;
	display: block;
	flex-grow: 0;
	position: relative;
	right:var(--menu-openicon-adjust, 0);
	max-height:100%;
	top:0;
	/*width: var(--menu-openicon-width);
	height: var(--menu-openicon-height);*/
	fill:var(--link-color);
	stroke:var(--link-color);
	transition-property: transform;
	transition-duration: 0.3s;
	transition-timing-function: ease-in-out;
}

/* menu icons 

Requires icons.css and navbuttons.css

*/
.cs-menu a > i[class*=icon]  {
	display: var(--menu-icon-display);
	width:var(--menu-icon-width);
	height:var(--menu-icon-height);
	line-height:var(--menu-icon-height);
	font-size: var(--menu-icon-height);
	overflow: hidden;
}

.cs-menu a span {
	display: var(--menu-label-display);	
}


.cs-menu li.open > a .openicon {
	transform: rotate(90deg);
}
/* Expand label to fill space */
.cs-menu a > span {
	flex-grow: var(--menu-icon-stretch);
}

.cs-menu.menu-rollout-1 a span {
	visibility: hidden;
	overflow: hidden;
	position: absolute;
	top:100%;
	left:0;
	width:0;
	transition: background-color var(--menu-anim-time) ease-in-out , border-color var(--menu-anim-time)  ease-in-out, width var(--menu-anim-time)  ease-in-out ;
	align-items: center;
	justify-content: start;
}

.cs-menu.menu-align-right.menu-rollout-1 a span {
	left:auto;
	right:0;
	bottom:auto;
	justify-content: end;
}

.cs-menu.menu-orientation-vertical.menu-rollout-1 a span {
	top:0;
	left:100%;
	bottom:auto;
}

.cs-menu.menu-orientation-vertical.menu-align-right.menu-rollout-1 a span {
	top:0;
	right:100%;
	bottom:auto;
	left:auto;
}

.cs-menu.menu-rollout-1 a:hover span {
	width: var(--menu-item-width);
	box-sizing: content-box;
	display: flex;
	visibility: visible;
	height: var(--menu-icon-height);
	padding: var(--menu-item-padding);
	background-color: var(--menu-background);
}









