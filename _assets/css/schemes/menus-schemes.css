/* MENUS

WIP Schemes file.

As with all of these the current work is applying styling via classes. The end game
is to the use cs components to generate these scheme files automatically just be using
a clik stylesheet

Settings:



*/

.cs-menu.sample {

}


.cs-menu.fill ul {
	grid-template-columns: repeat(auto-fill, minmax(140px,1fr));	
}

.scheme-vertical li.open > ul.submenu {
	position: static;
}

.scheme-vertical ul {
	grid-template-columns: 1fr;
	grid-row-gap:var(--menu-gap);
}

.scheme-vertical ul > li > a, .scheme-vertical ul > li > a:hover {
	justify-content: flex-start;
}
	


.scheme-vertical ul.submenu  {
	grid-row-gap:0px;
}

.scheme-vertical a {
	transition-property: background-color;
	transition-duration: 1s;
	transition-timing-function: ease-in-out;
}

.cs-menu.dividers:not(.scheme-vertical) li a {
	border-width:0;
	border-right-width:var(--menu-item-border);
}

.cs-menu.dividers:not(.scheme-vertical) ul li:last-of-type a {
	border-right-width:0;
}

.cs-menu.boxes:not(.scheme-vertical) li a {
	border-right-width:0;
}

.cs-menu.boxes:not(.scheme-vertical) ul li:last-of-type a {
	border-right-width:var(--menu-item-border);
}

.cs-menu.scheme-vertical.dividers li a {
	border-width:0;
	border-bottom-width:var(--menu-item-border);
}

.cs-menu.scheme-vertical.dividers ul li:last-of-type a {
	border-bottom-width:0;
}

.cs-menu.scheme-vertical.boxes li a {
	border-bottom-width:0;
}

.cs-menu.scheme-vertical.boxes li:last-of-type a {
	border-bottom-width:var(--menu-item-border);
}

.cs-menu.scheme-flex, .cs-menu.scheme-vertical {
	--menu-text-align: left;
}

.cs-menu.right {
	--menu-text-align: right;
}

.cs-menu.center {
	--menu-text-align: center;
}

.cs-menu.scheme-flex.right ul {
	justify-content: flex-end;
}

.cs-menu.scheme-flex.center ul {
	justify-content: center;
}

.cs-menu.scheme-flex ul {
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	grid-gap:0; /* Applying a grid gap seems to work in some browsers */
}

.cs-menu.scheme-flex.stretch li {
	flex-grow: 1;
}

.cs-menu.scheme-flex.stretch ul {
	width: 100%;
	--menu-text-align: center;
}

.cs-menu.scheme-flex.adjust ul li:first-of-type a {
	padding-left:0;
}

.cs-menu.scheme-flex.adjust ul li:last-of-type a {
	padding-right:0;
}


@media screen and (max-width:630px) {


	.cs-menu.scheme-flex:not(.menu-mobile) ul {
		flex-direction: column;
	}

	.cs-menu.scheme-flex:not(.menu-mobile) ul > li > a {
		justify-content: flex-start;
	}
	
	/* reset the first and last hacks above but you'll probably
	want to define different values for these */
	
	.cs-menu.scheme-flex:not(.menu-mobile) {
		--menu-item-padding: 4px 0;
		--menu-item-border: 0;
	}

	.cs-menu.scheme-flex:not(.menu-mobile) ul li:first-of-type {
		padding:var(--menu-item-padding);	
	}

	.cs-menu.scheme-flex:not(.menu-mobile) ul li:last-of-type {
		padding:var(--menu-item-padding);	
		border-width:var(--menu-item-border);
	}

}






