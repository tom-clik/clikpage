<!---

TODO: broken

## Status

WIP converting to formal cs. NB menu.cfc in this folder deprecated.
     
## To Do

- [ ] Align - not working in other media
- [ ] Icons - NB need menu icons and open indicator! Confusion here.

--->

<cfscript>
settingsObj = new clikpage.settings.settings(debug=1);
contentObj = new clikpage.content.content(settingsObj=settingsObj);
styles = settingsObj.loadStyleSettings(ExpandPath("../styles/testStyles.xml"));
pageObj = new clikpage.page(debug=1);
menu_cs = contentObj.new(id="menu",title="menu",type="menu");
menu_cs.data = deserializeJSON(FileRead(ExpandPAth("../site/_out/sampleMenu.json")));

StructAppend(styles.colors, 
	{
		"brown": {"value": "Brown"},
		"Bisque": {"value": "Bisque"},
		"DarkCyan": {"value": "DarkCyan"},
		"DarkKhaki": {"value": "DarkKhaki"},
		"pink": {"value": "pink"},
		"Cornsilk": {"value": "Cornsilk"},
		"darkslategray": {"value": "darkslategray"}
	}
);

contentObj.debug = 1;

menustyles = {};

menustyles.main = {
	"menu-icon-display": "none",
	"menu-item-padding": "8px",
	"flex": 0,
	"align": "center",
	"menu-gap":"6px",
	"menu-item-border": "0",
	"border-type" :"normal",
	"link-color": "brown",
	"menu-background": "Bisque",
	"menu-item-border": "0 0 4px 0",
	"hover": {
		"link-color" : "DarkCyan",
		"menu-background" : "DarkKhaki",
		"menu-border-color" : "pink"
	},
	"hi": {
		"link-color" : "Cornsilk",
		"menu-background" : "darkslategray"
	}

}

menustyles.max = {
	"menu-icon-display": "inline-block",
	"align": "right",
	"menu-item-padding": "4px 12px",
	"border-type" :"dividers",
	"menu-gap":"0",
	"menu-item-border": "1px",
	"flex": 1,
	"stretch":0
}


menustyles.mid = {
	"width":"120px",
	"flex": 0,
	"menu-gap":"0",
	"orientation": "vertical",
	"align": "left",
	"menu-item-border": "1px",
	"border-type" :"dividers",
	"submenu_position":"static",
	"menu-icon-display": "inline-block"
}

menustyles.mobile = {
	"width":"48px",
	"flex": 0,
	"menu-gap":"0",
	"orientation": "vertical",
	"align": "left",
	"menu-item-border": "0px",
	"border-type" :"dividers",
	"submenu_position":"static",
	"menu-label-display": "none"
}

styles.style["menu"] = menustyles;

menuCss = "/* auto generated by menus.cfm test page */" & NewLine();
menuCss &= ":root {\n" &  settingsObj.colorVariablesCSS(settings=styles,debug=contentObj.debug) & "}\n";
site.cs = {
	"menu" = menu_cs
};

contentObj.settings(menu_cs,styles.style,styles.media);
menuCss &= contentObj.contentCSS(styles=styles.style,content_sections=site.cs,media=styles.media);

menuCss = settingsObj.outputFormat(
	css=menuCss,
	media=styles.media,
	debug=contentObj.debug
	);

FileWrite(ExpandPath("menu_styling.css"),menuCss,"utf-8");



// writeDump(cmenu_css);

cs = contentObj.display(content=menu_cs);


</cfscript>

<!DOCTYPE html>
<html>
<head>
	<title>Menu test</title>
	<cfoutput>
	#pageObj.cssStaticFiles.getLinks(cs.pagecontent.static_css,1)#
	</cfoutput>
	<link rel="stylesheet" type="text/css" href="/_assets/css/fonts/google_icons_codes.css">
	<link rel="stylesheet" type="text/css" href="/_assets/css/fonts/google_icons.css">
	<link rel="stylesheet" type="text/css" href="/_assets/css/icons.css">
	<link rel="stylesheet" type="text/css" href="menu_styling.css">

	<meta charset="UTF-8">
	<style>
		#menu {
			margin:20px;
		}

		#menu .menu_index  {
			--menu-icon: var(--icon-home);
		}
		#menu .menu_gallery  {
			--menu-icon: var(--icon-search);
		}
		#menu .menu_gallery2  {
			--menu-icon:var(--icon-last_page);
		}
		#menu .menu_about  {
			--menu-icon: var(--icon-favorite);
		}
		#menu .menu_news  {
			--menu-icon: var(--icon-account);
		}
		#menu .menu_newscarousel  {
			--menu-icon: var(--icon-cart);
		}
		#menu .menu_images  {
			--menu-icon: var(--icon-done);
		}
		#menu .menu_singlearticle  {
			--menu-icon: var(--icon-fullscreen_exit);	
	</style>
</head>
<body>

<div class="cs-title">
Menu Testing
</div>

<cfoutput>#cs.html#
 
#pageObj.jsStaticFiles.getLinks(cs.pagecontent.static_js,1)#
</cfoutput>


<script>
	
	$(document).ready(function() {
		
		<cfoutput>#cs.pagecontent.onready#</cfoutput>
	
	});

</script>

</body>
</html>

